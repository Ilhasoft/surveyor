apply plugin: 'com.android.application'
apply plugin: 'jacoco-android'

// load our keystore configuration
def keystore = new Properties()
keystore.load(new FileInputStream(rootProject.file("keystore.properties")))

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "io.rapidpro.surveyor"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1300
        versionName "13.0.0"
        multiDexEnabled = true

        testInstrumentationRunner "io.rapidpro.surveyor.test.TestRunner"
        testInstrumentationRunnerArgument 'notAnnotation', 'androidx.test.filters.FlakyTest'
    }
    signingConfigs {
        release {
            storeFile file(keystore['storeFile'])
            storePassword keystore['storePassword']
            keyAlias keystore['keyAlias']
            keyPassword keystore['keyPassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            testCoverageEnabled true
        }
    }
    flavorDimensions 'version'
    productFlavors {
        rapidpro {
            dimension 'version'
        }
        "$thirdparty.applicationId" {
            dimension 'version'
            applicationId thirdparty.applicationId
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
    google()
}

dependencies {
    implementation project(':goflow')

    // google services
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'

    // rest api
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    // for location services
    implementation 'com.google.android.gms:play-services-gcm:16.1.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'

    // internationalization, language iso codes
    implementation 'com.neovisionaries:nv-i18n:1.11'

    // apache commons
    implementation  'org.apache.commons:commons-lang3:3.8.1'
    //noinspection GradleDependency newer versions use java.nio methods not supported on older Android versions
    implementation 'commons-io:commons-io:2.4'

    implementation 'com.vdurmont:semver4j:2.2.0'

    // Android M permissions
    implementation 'com.greysonparrelli.permiso:permiso:0.3.0'

    // legacy
    annotationProcessor 'io.realm:realm-android:0.82.1'
    implementation 'io.realm:realm-android:0.82.1'
    implementation('io.rapidpro:flows:11.5') {
        exclude group: 'org.threeten'
    }
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.2'

    // unit tests
    testImplementation 'junit:junit:4.12'

    // instrumented tests
    androidTestImplementation 'androidx.test:core:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.1.1'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.10.0'
}
